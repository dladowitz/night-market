.row#dishes
  .col-sm-12
    .widget-box.transparent
      .widget-header
        .widget-title
          %span.fsize-20
            %i.fa.fa-cutlery
          %span.fsize-25
            Dishes
      .widget-body
        .widget-main
          .col-sm-12
            = link_to new_event_meal_dish_path(@event, @meal), class: "btn btn-success ml12 mb10" do
              %i.fa.fa-cutlery.mr10.bigger-150
              Add A Dish


          .col-sm-12
            - @meal.dishes.each do |dish|
              .col-sm-4
                = form_for [@event, @meal, dish], html: {class: "form-horizontal", role: "form"} do |f|
                  .widget-box
                    .widget-header
                      .widget-title
                        %span.fsize-20.purple
                          = dish.name
                    .widget-body
                      .widget-main
                        .form-group
                          = f.label :vendor, class: "control-label col-sm-2"
                          .col-sm-5
                            =f.text_field :vendor, class: "form-control"
                        .form-group
                          = f.label :servings, class: "control-label col-sm-2"
                          .col-sm-5
                            = f.number_field :servings, class: "form-control input-mini"
                        .form-group
                          = f.label :category, class: "control-label col-sm-2"
                          .col-sm-5
                            = f.select :category, [["Main", "Main"], [ "Desert", "Desert"], ["Side1", "Side1"], ["Side2", "Side2"], ["Side3", "Side3"]]
                        .form-group.form-group-border-box
                          = f.label "Options", class: "control-label col-sm-2"
                          .col-sm-10.fsize-10
                            %ul.list-inline
                              %li
                                = f.check_box :vegetarian
                                = f.label :vegetarian
                              %li
                                = f.check_box :vegan
                                = f.label :vegan
                              %li
                                = f.check_box :gluten_free
                                = f.label :gluten_free
                        .form-group-border-box
                          .form-group
                            = f.label :needs_ordering, "Needs PreOrdering", class: "control-label col-sm-5 t-align-left ml10"
                            .col-xs-6.ordering-needs
                              = f.radio_button :needs_ordering, "1", checked: dish.needs_ordering?, class: "ordering-needed"
                              = f.label "Yes", class: "mr10"
                              = f.radio_button :needs_ordering, "0", checked: !dish.needs_ordering?, class: "ordering-unneeded"
                              = f.label "No"
                          .form-group.ordered-buttons{class: ("display-none" if !dish.needs_ordering?)}
                            .col-sm-10.col-sm-offset-2
                              .btn-group{ data: {toggle: "buttons"}, html: {role: "group"} }
                                %label.ordered.btn.btn-xs.btn-default.pr10{ class: ("active btn-success" if dish.ordered?) }
                                  = f.radio_button :ordered, "1"
                                  %i.fa.fa-check.mr10
                                  Ordered
                                %label.un-ordered.btn.btn-xs.btn-default.pr10{ class: ("active btn-danger" if !dish.ordered?) }
                                  = f.radio_button :ordered, "0"
                                  %i.fa.fa-close.mr5
                                  Un-Ordered
                        .form-group-border-box.mt15
                          .form-group
                            = f.label :transport_method, "Transport to Site", class: "control-label col-sm-5 t-align-left ml10"
                            .col-xs-6
                              = f.radio_button :transport_method, "Pickup", checked: dish.transport_method == "Pickup"
                              = f.label "Pickup", class: "mr10"
                              = f.radio_button :transport_method, "Delivery", checked: dish.transport_method == "Delivery"
                              = f.label "Delivery", class: "mr10"
                          .form-group
                            = f.label :transport_time, "Time", class: "control-label col-sm-2 t-align-left ml10"
                            .col-xs-8
                              -#= f.datetime_field :transport_time
                              .datetimepicker.input-group.date
                                %input.form-control#dish_transport_time{:type => "text", name: "dish[transport_time]", value: bootstrap_datetime_format(dish.transport_time) }
                                %span.input-group-addon
                                  %i.fa.fa-calendar


                      .widget-toolbox.padding-10.clearfix
                        = button_tag class: "btn btn-sm btn-warning" do
                          %i.fa.fa-floppy-o.bigger-150.mr5
                          Update

                        = link_to event_meal_dish_path(@event, @meal, dish), :method => :delete, class: "btn btn-sm btn-danger", :data => { :confirm => "Do you really, really, really, really want to delete this? I mean really." } do
                          %i.fa.fa-trash-o.bigger-150.mr5
                          Delete



:javascript

  //shows ordered/unordered buttons
  $( ".ordering-needed" ).click(function() {
    $(this).parent().parent().next().show(1000)
  });

  //hides ordered/unordered buttons
  $( ".ordering-unneeded" ).click(function() {
    $(this).parent().parent().next().hide(1000)
  })

  //turns ordered button green and unordered button gray
  $(".ordered").click(function(){
    $(this).addClass("btn-success");
    $(this).siblings().first().removeClass("btn-danger")
  });

  //turns ordered button gray and unordered button red
  $(".un-ordered").click(function(){
    $(this).addClass("btn-danger");
    $(this).siblings().first().removeClass("btn-success")
  });
